<?php
/**
 * @file
 * A description of what your module does.
 */

/**
 * Implements hook_block_info().
 */
function tripal_transcriptomes_table_block_info()
{
    $blocks = [];

    $blocks['tripal_transcriptomes_table'] = [
        'info' => 'Tripal transcriptomes table',
    ];

    return $blocks;
}

function tripal_transcriptomes_table_generate_query()
{
    $sql = "SELECT cvterm_id, name FROM {cvterm} AS CCVTERM WHERE CCVTERM.name IN ('analysis_unigene_name', 'analysis_unigene_num_contigs')";
    $cv_results = chado_query($sql);
    $terms = [];
    while ($term = $cv_results->fetchObject()) {
        $terms[$term->name] = intval($term->cvterm_id);
    }

    $order = tripal_transcriptomes_table_get_order();
    $sort = isset($_GET['sort']) && $_GET['sort'] === 'desc' ? 'DESC' : 'ASC';

    $sql = "SELECT
                   field_data_field_unigene_current_archived.field_unigene_current_archived_value AS status,
                   chado_analysis_node.analysis_id AS analysis_id,
                   (SELECT value FROM chado.analysisprop WHERE type_id=:analysis_unigene_name AND analysis_id=chado_analysis_node.analysis_id) AS unigene_name,
                   (SELECT value FROM chado.analysisprop WHERE type_id=:analysis_unigene_num_contigs AND analysis_id=chado_analysis_node.analysis_id) AS num_contigs,
                   CA.timeexecuted AS date_run,
                   CA.program AS program,
                   CO.species AS species,
                   CO.genus AS genus,
                   CO.common_name AS common_name
            FROM 
            {node} node
            INNER JOIN {chado_analysis} chado_analysis_node ON node.nid = chado_analysis_node.nid
            INNER JOIN {node} node_chado_analysis ON chado_analysis_node.nid = node_chado_analysis.nid
            INNER JOIN {field_data_field_unigene_organism} field_data_field_unigene_organism ON node.nid = field_data_field_unigene_organism.entity_id AND (field_data_field_unigene_organism.entity_type = 'node' AND field_data_field_unigene_organism.deleted = '0')
            INNER JOIN chado.analysis AS CA ON chado_analysis_node.analysis_id = CA.analysis_id
            INNER JOIN chado.organism AS CO ON CAST(field_data_field_unigene_organism.field_unigene_organism_value AS int)=CO.organism_id
            LEFT JOIN {field_data_field_unigene_current_archived} field_data_field_unigene_current_archived ON node.nid = field_data_field_unigene_current_archived.entity_id AND (field_data_field_unigene_current_archived.entity_type = 'node' AND field_data_field_unigene_current_archived.deleted = '0')
            WHERE node.status = '1'
            ORDER BY {$order} {$sort}";

    return ['sql' => $sql, 'terms' => $terms];
}

function tripal_transcriptomes_table_get_order()
{
    if (! isset($_GET['order'])) {
        return 'unigene_name';
    }

    switch ($_GET['order']) {
        case 'Transcriptome':
            return 'unigene_name';
            break;
        case 'Date Run':
            return 'date_run';
            break;
        case 'Status':
            return 'status';
            break;
        case 'Organism':
            return 'genus';
            break;
        case 'Program':
            return 'program';
            break;
        case 'Transcripts':
            return '(SELECT value FROM chado.analysisprop WHERE type_id=:analysis_unigene_num_contigs AND analysis_id=chado_analysis_node.analysis_id)';
            break;
        default:
            return 'unigene_name';
    }
}

function tripal_transcriptomes_table_create_block_content()
{

    $sql = tripal_transcriptomes_table_generate_query();

    $results = db_query($sql['sql'], [
        ':analysis_unigene_num_contigs' => $sql['terms']['analysis_unigene_num_contigs'],
        ':analysis_unigene_name' => $sql['terms']['analysis_unigene_name'],
    ]);

    $rows = [];

    while ($field = $results->fetchObject()) {
        //$analysis_id = chado_get_id_from_nid('analysis', $field->nid);
        //$title = tripal_analysis_get_property($analysis_id, 'analysis_unigene_name')->value;
        $rows[] = [
            $field->unigene_name,
            date('m-d-Y', strtotime($field->date_run)),
            $field->status,
            "{$field->genus} {$field->species} ({$field->common_name})",
            $field->program,
            $field->num_contigs,
        ];
    }

    $content = theme('table', [
        'header' => [
            ['data' => 'Transcriptome', 'field' => 'unigene_name'],
            ['data' => 'Date Run', 'field' => 'date_run'],
            ['data' => 'Status', 'field' => 'status'],
            ['data' => 'Organism', 'field' => 'genus'],
            ['data' => 'Program', 'field' => 'program'],
            ['data' => 'Transcripts', 'field' => 'num_contigs'],
        ],
        'rows' => $rows,
    ]);

    return $content;
}

/**
 * Implements hook_block_view().
 */
function tripal_transcriptomes_table_block_view($delta = '')
{
    $block = [];

    switch ($delta) {
        case 'tripal_transcriptomes_table':
            $block['content'] = tripal_transcriptomes_table_create_block_content();
            break;
    }

    return $block;
}