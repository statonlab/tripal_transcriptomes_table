<?php
/**
 * @file
 * A description of what your module does.
 */

/**
 * Implements hook_block_info().
 */
function tripal_transcriptomes_table_block_info()
{
    $blocks = [];

    $blocks['tripal_transcriptomes_table'] = [
        'info' => 'Tripal transcriptomes table',
    ];

    return $blocks;
}

function tripal_transcriptomes_table_create_block_content()
{
    $content = '';

    $sql = "SELECT cvterm_id FROM {cvterm} AS CCVTERM WHERE CCVTERM.name IN ('analysis_unigene_name', 'analysis_unigene_num_contigs')";
    $cv_results = chado_query($sql);
    $terms = [];
    while($term = $cv_results->fetchObject()) {
        $terms[] = $term->cvterm_id;
    }

    $sql = "SELECT node.title AS node_title,
                   node.nid AS nid,
                   field_data_field_unigene_current_archived.field_unigene_current_archived_value AS field_data_field_unigene_current_archived_field_unigene_curr,
                   field_data_field_unigene_organism.field_unigene_organism_value AS field_data_field_unigene_organism_field_unigene_organism_val,
                   chado_analysis_node.analysis_id AS analysis_id,
                   (SELECT CCVTERM.value FROM {cvterm} AS CCVTERM WHERE CCVTERM.name IN ('analysis_unigene_name', 'analysis_unigene_num_contigs')) AS terms
            FROM 
            [node] node
            INNER JOIN [chado_analysis] chado_analysis_node ON node.nid = chado_analysis_node.nid
            INNER JOIN [node] node_chado_analysis ON chado_analysis_node.nid = node_chado_analysis.nid
            INNER JOIN [field_data_field_unigene_organism] field_data_field_unigene_organism ON node.nid = field_data_field_unigene_organism.entity_id AND (field_data_field_unigene_organism.entity_type = 'node' AND field_data_field_unigene_organism.deleted = '0')
            INNER JOIN {analysis} AS CA ON chado_analysis_node.analysis_id = CA.analysis_id
            LEFT JOIN [field_data_field_unigene_current_archived] field_data_field_unigene_current_archived ON node.nid = field_data_field_unigene_current_archived.entity_id AND (field_data_field_unigene_current_archived.entity_type = 'node' AND field_data_field_unigene_current_archived.deleted = '0')
            WHERE node.status = '1'";
    $results = chado_query($sql);

    $rows = [];

    while ($field = $results->fetchObject()) {
        $analysis_id = chado_get_id_from_nid('analysis', $field->nid);
        $title = tripal_analysis_get_property($analysis_id, 'analysis_unigene_name')->value;
        $rows[] = [
            $title,
        ];
    }

    dpm($results);

    return $content;
}

/**
 * Implements hook_block_view().
 */
function tripal_transcriptomes_table_block_view($delta = '')
{
    $block = [];

    switch ($delta) {
        case 'tripal_transcriptomes_table':
            $block['content'] = tripal_transcriptomes_table_create_block_content();
            break;
    }

    return $block;
}