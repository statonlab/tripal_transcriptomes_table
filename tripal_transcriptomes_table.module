<?php
/**
 * @file
 * A description of what your module does.
 */

/**
 * Implements hook_block_info().
 */
function tripal_transcriptomes_table_block_info() {
  $blocks = [];

  $blocks['tripal_transcriptomes_table'] = [
    'info' => 'Tripal transcriptomes table',
  ];

  return $blocks;
}

function tripal_transcriptomes_table_generate_query() {

  //NOTE:  these properties may not be set for new analyses created until the proper field is created or the loader sets these props

  $sql = "SELECT cvterm_id, name FROM {cvterm} AS CCVTERM WHERE CCVTERM.name IN ('analysis_unigene_name', 'analysis_unigene_num_contigs')";
  $cv_results = chado_query($sql);
  $terms = [];
  while ($term = $cv_results->fetchObject()) {
    $terms[$term->name] = intval($term->cvterm_id);
  }

  $order = tripal_transcriptomes_table_get_order();
  $sort = isset($_GET['sort']) && $_GET['sort'] === 'desc' ? 'DESC' : 'ASC';

  $term = tripal_load_term_entity([
    'vocabulary' => 'operation',
    'accession' => '3258',
  ]);
  $bundle = tripal_load_bundle_entity(['term_id' => $term->id]);
  $table_name = "chado_" . $bundle->name;

  $sql = "SELECT TE.id AS entity_id,
            A.timeexecuted AS date_run,
            A.program AS program,
            O.species AS species,
            O.genus AS genus,
            O.common_name AS common_name,
            TE.title AS unigene_name,
            (SELECT CAST(NULLIF(value, '') AS integer) FROM chado.analysisprop WHERE type_id=:analysis_unigene_num_contigs AND analysis_id=bundle.record_id) AS num_contigs
            FROM {" . db_escape_table($table_name) . "} bundle
            INNER JOIN tripal_entity TE ON TE.id = bundle.entity_id
            INNER JOIN chado.analysis A ON A.analysis_id = bundle.record_id
            INNER JOIN chado.analysis_organism AO ON A.analysis_id = AO.analysis_id
            INNER JOIN chado.organism O ON O.organism_id = AO.organism_id
            ORDER BY $order $sort";

  dpm($sql);
  dpm($table_name);

  return ['sql' => $sql, 'terms' => $terms];
}

function tripal_transcriptomes_table_get_order() {
  if (!isset($_GET['order'])) {
    return 'unigene_name';
  }

  switch ($_GET['order']) {
    case 'Transcriptome':
      return 'unigene_name';
      break;
    case 'Date Run':
      return 'date_run';
      break;
    case 'Status':
      return 'status';
      break;
    case 'Organism':
      return 'genus';
      break;
    case 'Program':
      return 'program';
      break;
    case 'Transcripts':
      return 'num_contigs';
      break;
    default:
      return 'unigene_name';
  }
}

function tripal_transcriptomes_table_create_block_content() {

  $sql = tripal_transcriptomes_table_generate_query();

  $results = db_query($sql['sql'], [
    ':analysis_unigene_num_contigs' => $sql['terms']['analysis_unigene_num_contigs'],
  ]);

  $rows = [];

  while ($field = $results->fetchObject()) {
    $rows[] = [
      l($field->unigene_name, 'bio_data/' . $field->entity_id),
      date('m-d-Y', strtotime($field->date_run)),
      "{$field->genus} {$field->species} ({$field->common_name})",
      $field->program,
      $field->num_contigs ?: 0,
    ];
  }

  $content = "<p>
                    RNA-Seq datasets for multiple species are available.
                    MiSeq and HiSeq reads from multiple libraries were  cleaned with 
                    <a href=\"http://www.usadellab.org/cms/?page=trimmomatic\">Trimmomatic</a>
                    and assembled by <a href=\"http://trinityrnaseq.sourceforge.net/\">Trinity</a>.
                    <a href=\"http://weizhong-lab.ucsd.edu/cd-hit/\">CD-hit</a> was used to collapse highly similar
                    reads into a single sequence. Older transcriptomes were built with
                    <a href=\" http://www.dnastar.com/t-seqmanpro.aspx\">SeqMan Pro</a>.
                 </p>";

  $content .= theme('table', [
    'header' => [
      ['data' => 'Transcriptome', 'field' => 'unigene_name'],
      ['data' => 'Date Run', 'field' => 'date_run'],
      ['data' => 'Organism', 'field' => 'genus'],
      ['data' => 'Program', 'field' => 'program'],
      ['data' => 'Transcripts', 'field' => 'num_contigs'],
    ],
    'rows' => $rows,
  ]);

  return $content;
}

/**
 * Implements hook_block_view().
 */
function tripal_transcriptomes_table_block_view($delta = '') {
  $block = [];

  switch ($delta) {
    case 'tripal_transcriptomes_table':
      $block['content'] = tripal_transcriptomes_table_create_block_content();
      break;
  }

  return $block;
}